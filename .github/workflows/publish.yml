name: publish draft release
on: 
  push:
    branches:
      - master
      - ci-test
jobs:

  build_dist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.0.6

      - name: Print version
        run: echo ${{ steps.extract_version.outputs.version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install modules
        run: npm ci 

      - name: Build
        run: npm run build

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          cd dist
          zip -r ../dist.zip ./

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          release_name: v${{ steps.extract_version.outputs.version }}
          draft: true
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip

  publish_on_mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@master
      with:
        node-version: 16

    - name: install dependencies
      run: npm ci 
      
    - name: publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run electron:build

  publish_on_win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@master
      with:
        node-version: 16

    - name: install dependencies
      run: npm ci 
      
    - name: publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: npm run electron:build
      
